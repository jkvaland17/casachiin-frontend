name: DR CCD

on:
  push:
    tags:
      - "dr*"

jobs:
  build:
    runs-on: dr-agent
    steps:
      - name: Extract prod version from dr tag
        id: extract_version
        run: |
          dr_tag="${GITHUB_REF##*/}"
          prod_tag="prodV.${dr_tag#drV.}"
          echo "PROD_TAG=${prod_tag}" >> $GITHUB_ENV

      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Pull and tag image to ECR
        env:
          ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY_PROD }}
          ECR_REGISTRY_DR: ${{ secrets.ECR_REGISTRY_DR }}
        run: |
          docker pull $ECR_REGISTRY/$ECR_REPOSITORY:${{ env.PROD_TAG }}
          docker tag $ECR_REGISTRY/$ECR_REPOSITORY:${{ env.PROD_TAG }} $ECR_REGISTRY_DR/$ECR_REPOSITORY:${{ env.PROD_TAG }}
          docker logout $ECR_REGISTRY

      - name: Set up AWS CLI for DR
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION_DR }}

      - name: Login to Amazon DR ECR
        id: login-ecr-dr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Push image to ECR
        env:
          ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY_PROD }}
          ECR_REGISTRY_DR: ${{ secrets.ECR_REGISTRY_DR }}
        run: |
          docker push $ECR_REGISTRY_DR/$ECR_REPOSITORY:${{ env.PROD_TAG }}
          docker image rm $ECR_REGISTRY/$ECR_REPOSITORY:${{ env.PROD_TAG }} $ECR_REGISTRY_DR/$ECR_REPOSITORY:${{ env.PROD_TAG }}
          docker logout $ECR_REGISTRY_DR

  deploy:
    runs-on: dr-agent
    needs: build
    steps:
      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION_DR }}

      - name: Configure kubectl
        run: |
          aws eks update-kubeconfig --name ${{ secrets.EKS_CLUSTER_NAME_DR }} --region ${{ secrets.AWS_REGION_DR }}

      - name: Extract prod version from dr tag
        id: extract_version
        run: |
          dr_tag="${GITHUB_REF##*/}"
          prod_tag="prodV.${dr_tag#drV.}"
          echo "PROD_TAG=${prod_tag}" >> $GITHUB_ENV

      - name: Deploy to EKS using Helm
        env:
          ECR_REGISTRY_DR: ${{ secrets.ECR_REGISTRY_DR }}
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY_PROD }}
          GH_PAT: ${{ secrets.GH_PAT }}
          GROUP: CA-admin-panel-prod
        run: |
          curl -s -O https://$GH_PAT@raw.githubusercontent.com/tcpdigital8130/platform/main/helm-charts/mbs.tar.gz
          curl -s -O https://$GH_PAT@raw.githubusercontent.com/tcpdigital8130/platform/main/envs/prod/services/CA-admin-panel/dr-values.yaml
          tar -xvzf mbs.tar.gz
          helm upgrade --install $GROUP ./mbs \
          --namespace prod --create-namespace -f ./dr-values.yaml \
          --set image.repository=$ECR_REGISTRY_DR/$ECR_REPOSITORY \
          --set image.tag=${{ env.PROD_TAG }}

      - name: Clean up kubeconfig
        run: |
          rm -f $HOME/.kube/config